name: CI-CD pipeline to AWS
env:
  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  EB_S3_BUCKET_NAME: "elasticbeanstalk-ap-southeast-2-682296103416"
  EB_APPLICATION_NAME: "CP3407 Cleaning Website"
  EB_ENVIRONMENT_NAME: "CP3407CleaningWebsite-env"
  DEPLOY_PACKAGE_NAME: "cleaning-website-${{ github.sha }}.zip"
  VERSION_NAME: ${{ github.sha }}
  AWS_REGION_NAME: "ap-southeast-2"
  ROLE_TO_ASSUME: "arn:aws:iam::682296103416:role/Cleaning-Website"

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            src
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Change to src directory
        run: cd ./src

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} *

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION_NAME }}
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}

      - name: Copying file to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/
      - name: Complete File Upload
        run: echo "Source Code Uploaded Successfully!"
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION_NAME }}
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}

      - name: Create new EB app version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name "${{ env.EB_APPLICATION_NAME }}" \
          --source-bundle S3Bucket="${{ env.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ env.VERSION_NAME }}"

      - name: Deploy new app
        run: |
          aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ env.VERSION_NAME }}" \
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_KEY,Value="${{ env.SECRET_KEY }}"

      - name: Complete Deployment
        run: echo "Website Updated Successfully!"
